{"version":3,"sources":["components/Timer.js","components/Controls.js","logic/index.js","components/App.js","index.js"],"names":["Timer","props","className","style","alarmColor","id","timerType","getText","onClick","handleTimer","handleReset","Controls","titleID","title","decID","value","lengthID","length","incID","accurateInterval","fn","time","cancel","nextAt","timeout","wrapper","Date","getTime","setTimeout","clearTimeout","App","state","break","session","timerState","timer","intervalID","color","setBreak","bind","setSession","lengthControl","beginCountDown","decrementTimer","phaseControl","warning","buzzer","switchTimer","e","this","currentTarget","stateToChange","sign","currentLength","setState","_timer","audioBeep","play","num","str","minutes","Math","floor","seconds","pause","currentTime","preload","ref","audio","src","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kOAoBeA,EApBD,SAACC,GAAD,OACZ,sBAAKC,UAAU,aAAf,UACE,qBAAKA,UAAU,QAAQC,MAAOF,EAAMG,WAApC,SACE,sBAAKF,UAAU,gBAAf,UACE,qBAAKG,GAAG,cAAR,SAAuBJ,EAAMK,YAC7B,qBAAKD,GAAG,YAAYH,UAAU,UAA9B,SAAyCD,EAAMM,iBAGnD,sBAAKL,UAAU,gBAAf,UACE,yBAAQG,GAAG,aAAaG,QAASP,EAAMQ,YAAvC,UACE,mBAAGP,UAAU,qBACb,mBAAGA,UAAU,yBAEf,wBAAQG,GAAG,QAAQG,QAASP,EAAMS,YAAlC,SACE,mBAAGR,UAAU,iCCcNS,EA5BE,SAACV,GAAD,OACf,sBAAKC,UAAU,iBAAf,UACE,qBAAKG,GAAIJ,EAAMW,QAAf,SAAyBX,EAAMY,QAE/B,sBAAKX,UAAU,WAAf,UACE,wBACEG,GAAIJ,EAAMa,MACVN,QAASP,EAAMO,QACfO,MAAM,IAHR,SAKE,mBAAGb,UAAU,wBAGf,qBAAKA,UAAU,UAAUG,GAAIJ,EAAMe,SAAnC,SACGf,EAAMgB,SAGT,wBACEZ,GAAIJ,EAAMiB,MACVV,QAASP,EAAMO,QACfO,MAAM,IAHR,SAKE,mBAAGb,UAAU,8BCANiB,EAtBU,SAACC,EAAIC,GAC5B,IAAIC,EAAQC,EAAQC,EAASC,EAgB7B,OAdAF,GAAS,IAAIG,MAAOC,UAAYN,EAChCG,EAAU,KAEVC,EAAU,WAGR,OAFAF,GAAUF,EACVG,EAAUI,WAAWH,EAASF,GAAS,IAAIG,MAAOC,WAC3CP,KAGTE,EAAS,WACP,OAAOO,aAAaL,IAGtBA,EAAUI,WAAWH,EAASF,GAAS,IAAIG,MAAOC,WAC3C,CACLL,OAAQA,ICwMGQ,E,kDAnNb,WAAY7B,GAAQ,IAAD,8BACjB,cAAMA,IACD8B,MAAQ,CACXC,MAAO,EACPC,QAAS,GACTC,WAAY,UACZ5B,UAAW,UACX6B,MAAO,KACPC,WAAY,GACZhC,WAAY,CAAEiC,MAAO,UAEvB,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,cAAgB,EAAKA,cAAcF,KAAnB,gBACrB,EAAK9B,YAAc,EAAKA,YAAY8B,KAAjB,gBACnB,EAAKG,eAAiB,EAAKA,eAAeH,KAApB,gBACtB,EAAKI,eAAiB,EAAKA,eAAeJ,KAApB,gBACtB,EAAKK,aAAe,EAAKA,aAAaL,KAAlB,gBACpB,EAAKM,QAAU,EAAKA,QAAQN,KAAb,gBACf,EAAKO,OAAS,EAAKA,OAAOP,KAAZ,gBACd,EAAKQ,YAAc,EAAKA,YAAYR,KAAjB,gBACnB,EAAKhC,QAAU,EAAKA,QAAQgC,KAAb,gBACf,EAAK7B,YAAc,EAAKA,YAAY6B,KAAjB,gBAtBF,E,qDAyBVS,GACPC,KAAKR,cACH,QACAO,EAAEE,cAAcnC,MAChBkC,KAAKlB,MAAMC,MACX,a,iCAIOgB,GACTC,KAAKR,cACH,UACAO,EAAEE,cAAcnC,MAChBkC,KAAKlB,MAAME,QACX,W,oCAIUkB,EAAeC,EAAMC,EAAe/C,GAChD,GAA8B,YAA1B2C,KAAKlB,MAAMG,WAIf,GAAIe,KAAKlB,MAAMzB,YAAcA,EACd,MAAT8C,GAAkC,IAAlBC,EAClBJ,KAAKK,SAAL,eAAiBH,EAAgBE,EAAgB,IAC/B,MAATD,GAAkC,KAAlBC,GACzBJ,KAAKK,SAAL,eAAiBH,EAAgBE,EAAgB,SAE9C,GAAa,MAATD,GAAkC,IAAlBC,EAAqB,CAAC,IAAD,EAC9CJ,KAAKK,UAAL,mBACGH,EAAgBE,EAAgB,GADnC,sBAEyB,GAAhBA,EAAqB,IAF9B,SAIK,GAAa,MAATD,GAAkC,KAAlBC,EAAsB,CAAC,IAAD,EAC/CJ,KAAKK,UAAL,mBACGH,EAAgBE,EAAgB,GADnC,sBAEyB,GAAhBA,EAAqB,IAF9B,O,oCAQ4B,YAA1BJ,KAAKlB,MAAMG,YACbe,KAAKP,iBACLO,KAAKK,SAAS,CAAEpB,WAAY,cAE5Be,KAAKK,SAAS,CAAEpB,WAAY,YAExBe,KAAKlB,MAAMK,YACba,KAAKlB,MAAMK,WAAWd,Y,uCAKV,IAAD,OACf2B,KAAKK,SAAS,CACZlB,WAAYjB,GAAiB,WAC3B,EAAKwB,iBACL,EAAKC,iBACJ,S,uCAKLK,KAAKK,SAAS,CAAEnB,MAAOc,KAAKlB,MAAMI,MAAQ,M,qCAI1C,IAAIA,EAAQc,KAAKlB,MAAMI,MACvBc,KAAKJ,QAAQV,GACbc,KAAKH,OAAOX,GAERA,EAAQ,IACNc,KAAKlB,MAAMK,YACba,KAAKlB,MAAMK,WAAWd,SAGK,YAAzB2B,KAAKlB,MAAMzB,WACb2C,KAAKP,iBACLO,KAAKF,YAA+B,GAAnBE,KAAKlB,MAAMC,MAAY,WAExCiB,KAAKP,iBACLO,KAAKF,YAAiC,GAArBE,KAAKlB,MAAME,QAAc,e,8BAKxCsB,GACFA,EAAS,GACXN,KAAKK,SAAS,CAAElD,WAAY,CAAEiC,MAAO,aAErCY,KAAKK,SAAS,CAAElD,WAAY,CAAEiC,MAAO,a,6BAIlCkB,GACU,IAAXA,GACFN,KAAKO,UAAUC,S,kCAIPC,EAAKC,GACfV,KAAKK,SAAS,CACZnB,MAAOuB,EACPpD,UAAWqD,EACXvD,WAAY,CAAEiC,MAAO,a,gCAKvB,IAAIuB,EAAUC,KAAKC,MAAMb,KAAKlB,MAAMI,MAAQ,IACxC4B,EAAUd,KAAKlB,MAAMI,MAAkB,GAAVyB,EAKjC,OAFAA,EAAUA,EAAU,GAAK,IAAMA,EAAUA,GAExB,KAHjBG,EAAUA,EAAU,GAAK,IAAMA,EAAUA,K,oCAOzCd,KAAKK,SAAS,CACZtB,MAAO,EACPC,QAAS,GACTC,WAAY,UACZ5B,UAAW,UACX6B,MAAO,KACPC,WAAY,GACZhC,WAAY,CAAEiC,MAAO,WAGnBY,KAAKlB,MAAMK,YACba,KAAKlB,MAAMK,WAAWd,SAGxB2B,KAAKO,UAAUQ,QACff,KAAKO,UAAUS,YAAc,I,+BAGrB,IAAD,OACP,OACE,sBAAK/D,UAAU,iBAAf,UACE,qBAAKA,UAAU,aAAf,0BACA,sBAAKA,UAAU,gBAAf,UACE,cAAC,EAAD,CACEgB,MAAM,kBACND,OAAQgC,KAAKlB,MAAMC,MACnBhB,SAAS,eACTF,MAAM,kBACNN,QAASyC,KAAKX,SACdzB,MAAM,eACND,QAAQ,gBAGV,cAAC,EAAD,CACEM,MAAM,oBACND,OAAQgC,KAAKlB,MAAME,QACnBjB,SAAS,iBACTF,MAAM,oBACNN,QAASyC,KAAKT,WACd3B,MAAM,iBACND,QAAQ,qBAIZ,cAAC,EAAD,CACER,WAAY6C,KAAKlB,MAAM3B,WACvBE,UAAW2C,KAAKlB,MAAMzB,UACtBC,QAAS0C,KAAK1C,QACdE,YAAawC,KAAKxC,YAClBC,YAAauC,KAAKvC,cAGpB,uBACEL,GAAG,OACH6D,QAAQ,OACRC,IAAK,SAACC,GACJ,EAAKZ,UAAYY,GAEnBC,IAAI,qH,UA7MIC,EAAMC,W,YCAxBC,IAASC,OAAO,cAAC,EAAD,IACdC,SAASC,eAAe,W","file":"static/js/main.8d398647.chunk.js","sourcesContent":["const Timer = (props) => (\n  <div className=\"main-timer\">\n    <div className=\"timer\" style={props.alarmColor}>\n      <div className=\"timer-wrapper\">\n        <div id=\"timer-label\">{props.timerType}</div>\n        <div id=\"time-left\" className=\"display\">{props.getText()}</div>\n      </div>\n    </div>\n    <div className=\"timer-control\">\n      <button id=\"start_stop\" onClick={props.handleTimer}>\n        <i className=\"fa fa-play fa-2x\" />\n        <i className=\"fa fa-pause fa-2x\" />\n      </button>\n      <button id=\"reset\" onClick={props.handleReset}>\n        <i className=\"fa fa-refresh fa-2x\" />\n      </button>\n    </div>\n  </div>\n);\n\nexport default Timer;\n","const Controls = (props) => (\n  <div className=\"length-control\">\n    <div id={props.titleID}>{props.title}</div>\n\n    <div className=\"controls\">\n      <button\n        id={props.decID}\n        onClick={props.onClick}\n        value=\"-\"\n      >\n        <i className=\"fa fa-minus fa-2x\" />\n      </button>\n\n      <div className=\"display\" id={props.lengthID}>\n        {props.length}\n      </div>\n\n      <button\n        id={props.incID}\n        onClick={props.onClick}\n        value=\"+\"\n      >\n        <i className=\"fa fa-plus fa-2x\" />\n      </button>\n    </div>\n  </div>\n);\n\nexport default Controls;\n","const accurateInterval = (fn, time) => {\n  let cancel, nextAt, timeout, wrapper;\n\n  nextAt = new Date().getTime() + time;\n  timeout = null;\n\n  wrapper = () => {\n    nextAt += time;\n    timeout = setTimeout(wrapper, nextAt - new Date().getTime());\n    return fn();\n  };\n\n  cancel = () => {\n    return clearTimeout(timeout);\n  };\n\n  timeout = setTimeout(wrapper, nextAt - new Date().getTime());\n  return {\n    cancel: cancel\n  };\n};\n\nexport default accurateInterval;\n","import React from 'react';\nimport Timer from './Timer';\nimport Controls from './Controls';\n\nimport accurateInterval from '../logic';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      break: 5,\n      session: 25,\n      timerState: 'stopped',\n      timerType: 'Session',\n      timer: 1500,\n      intervalID: '',\n      alarmColor: { color: 'white' }\n    };\n    this.setBreak = this.setBreak.bind(this);\n    this.setSession = this.setSession.bind(this);\n    this.lengthControl = this.lengthControl.bind(this);\n    this.handleTimer = this.handleTimer.bind(this);\n    this.beginCountDown = this.beginCountDown.bind(this);\n    this.decrementTimer = this.decrementTimer.bind(this);\n    this.phaseControl = this.phaseControl.bind(this);\n    this.warning = this.warning.bind(this);\n    this.buzzer = this.buzzer.bind(this);\n    this.switchTimer = this.switchTimer.bind(this);\n    this.getText = this.getText.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n  }\n\n  setBreak(e) {\n    this.lengthControl(\n      'break',\n      e.currentTarget.value,\n      this.state.break,\n      'Session'\n    );\n  }\n\n  setSession(e) {\n    this.lengthControl(\n      'session',\n      e.currentTarget.value,\n      this.state.session,\n      'Break'\n    );\n  }\n\n  lengthControl(stateToChange, sign, currentLength, timerType) {\n    if (this.state.timerState === 'running') {\n      return;\n    }\n\n    if (this.state.timerType === timerType) {\n      if (sign === '-' && currentLength !== 1) {\n        this.setState({ [stateToChange]: currentLength - 1 });\n      } else if (sign === '+' && currentLength !== 60) {\n        this.setState({ [stateToChange]: currentLength + 1 });\n      }\n    } else if (sign === '-' && currentLength !== 1) {\n      this.setState({\n        [stateToChange]: currentLength - 1,\n        timer: currentLength * 60 - 60\n      });\n    } else if (sign === '+' && currentLength !== 60) {\n      this.setState({\n        [stateToChange]: currentLength + 1,\n        timer: currentLength * 60 + 60\n      });\n    }\n  }\n\n  handleTimer() {\n    if (this.state.timerState === 'stopped') {\n      this.beginCountDown();\n      this.setState({ timerState: 'running' });\n    } else {\n      this.setState({ timerState: 'stopped' });\n\n      if (this.state.intervalID) {\n        this.state.intervalID.cancel();\n      }\n    }\n  }\n\n  beginCountDown() {\n    this.setState({\n      intervalID: accurateInterval(() => {\n        this.decrementTimer();\n        this.phaseControl();\n      }, 1000)\n    });\n  }\n\n  decrementTimer() {\n    this.setState({ timer: this.state.timer - 1 });\n  }\n\n  phaseControl() {\n    let timer = this.state.timer;\n    this.warning(timer);\n    this.buzzer(timer);\n\n    if (timer < 0) {\n      if (this.state.intervalID) {\n        this.state.intervalID.cancel();\n      }\n\n      if (this.state.timerType === 'Session') {\n        this.beginCountDown();\n        this.switchTimer(this.state.break * 60, 'Break');\n      } else {\n        this.beginCountDown();\n        this.switchTimer(this.state.session * 60, 'Session');\n      }\n    }\n  }\n\n  warning(_timer) {\n    if (_timer < 61) {\n      this.setState({ alarmColor: { color: '#a50d0d' } });\n    } else {\n      this.setState({ alarmColor: { color: 'white' } });\n    }\n  }\n\n  buzzer(_timer) {\n    if (_timer === 0) {\n      this.audioBeep.play();\n    }\n  }\n\n  switchTimer(num, str) {\n    this.setState({\n      timer: num,\n      timerType: str,\n      alarmColor: { color: 'white' }\n    });\n  }\n\n  getText() {\n    let minutes = Math.floor(this.state.timer / 60);\n    let seconds = this.state.timer - minutes * 60;\n\n    seconds = seconds < 10 ? '0' + seconds : seconds;\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n\n    return minutes + ':' + seconds;\n  }\n\n  handleReset() {\n    this.setState({\n      break: 5,\n      session: 25,\n      timerState: 'stopped',\n      timerType: 'Session',\n      timer: 1500,\n      intervalID: '',\n      alarmColor: { color: 'white' }\n    });\n\n    if (this.state.intervalID) {\n      this.state.intervalID.cancel();\n    }\n\n    this.audioBeep.pause();\n    this.audioBeep.currentTime = 0;\n  }\n\n  render() {\n    return (\n      <div className=\"main-container\">\n        <div className=\"main-title\">25 + 5 Clock</div>\n        <div className=\"main-controls\">\n          <Controls\n            incID=\"break-increment\"\n            length={this.state.break}\n            lengthID=\"break-length\"\n            decID=\"break-decrement\"\n            onClick={this.setBreak}\n            title=\"Break Length\"\n            titleID=\"break-label\"\n          />\n\n          <Controls\n            incID=\"session-increment\"\n            length={this.state.session}\n            lengthID=\"session-length\"\n            decID=\"session-decrement\"\n            onClick={this.setSession}\n            title=\"Session Length\"\n            titleID=\"session-label\"\n          />\n        </div>\n\n        <Timer\n          alarmColor={this.state.alarmColor}\n          timerType={this.state.timerType}\n          getText={this.getText}\n          handleTimer={this.handleTimer}\n          handleReset={this.handleReset}\n        />\n\n        <audio\n          id=\"beep\"\n          preload=\"auto\"\n          ref={(audio) => {\n            this.audioBeep = audio;\n          }}\n          src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './style/font-awesome.min.css';\nimport './style/main.css';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}